<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.core.mapper.GsRoleMapper">

    <resultMap type="GsRole" id="GsRoleResult">
        <result property="roleId" column="role_id"/>
        <result property="roleName" column="role_name"/>
        <result property="roleKey" column="role_key"/>
        <result property="roleSort" column="role_sort"/>
        <result property="dataScope" column="data_scope"/>
        <result property="roleState" column="role_state"/>
        <result property="dataState" column="data_state"/>
        <result property="remark" column="remark"/>
        <result property="createBy" column="create_by"/>
        <result property="createTime" column="create_time"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

    <sql id="selectGsRoleVo">
        select role_id,
               role_name,
               role_key,
               role_sort,
               data_scope,
               role_state,
               data_state,
               remark,
               create_by,
               create_time,
               update_by,
               update_time
        from gs_role
    </sql>

    <select id="selectGsRoleList" parameterType="GsRole" resultMap="GsRoleResult">
        <include refid="selectGsRoleVo"/>
        <where>
            <if test="roleName != null  and roleName != ''">and role_name like concat('%', #{roleName}, '%')</if>
            <if test="roleKey != null  and roleKey != ''">and role_key = #{roleKey}</if>
            <if test="roleSort != null ">and role_sort = #{roleSort}</if>
            <if test="dataScope != null  and dataScope != ''">and data_scope = #{dataScope}</if>
            <if test="roleState != null ">and role_state = #{roleState}</if>
            <if test="dataState != null ">and data_state = #{dataState}</if>
        </where>
    </select>

    <select id="selectGsRoleById" parameterType="Long" resultMap="GsRoleResult">
        <include refid="selectGsRoleVo"/>
        where role_id = #{roleId}
    </select>

    <select id="selectRoleIdListById" parameterType="Long" resultType="Long">
        select role_id
        from gs_user_permission
        where user_id = #{userId}
    </select>

    <select id="selectRegionIdListByRoleId" parameterType="Long" resultType="Long">
        select region_id
        from gs_role_region
        where actor_id = #{roleId}
    </select>

    <!--    <select id="selectGsRoleByUserId" parameterType="String" resultMap="GsRoleResult">-->
    <!--        <include refid="selectGsRoleVo"/>-->
    <!--        where role_id in-->
    <!--        <foreach item="roleId" collection="array" open="(" separator="," close=")">-->
    <!--            #{roleId}-->
    <!--        </foreach>-->
    <!--    </select>-->

    <insert id="insertGsRole" parameterType="GsRole" useGeneratedKeys="true" keyProperty="roleId">
        insert into gs_role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="roleName != null and roleName != ''">role_name,</if>
            <if test="roleKey != null and roleKey != ''">role_key,</if>
            <if test="roleSort != null">role_sort,</if>
            <if test="dataScope != null">data_scope,</if>
            <if test="roleState != null">role_state,</if>
            <if test="dataState != null">data_state,</if>
            <if test="remark != null">remark,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="roleName != null and roleName != ''">#{roleName},</if>
            <if test="roleKey != null and roleKey != ''">#{roleKey},</if>
            <if test="roleSort != null">#{roleSort},</if>
            <if test="dataScope != null">#{dataScope},</if>
            <if test="roleState != null">#{roleState},</if>
            <if test="dataState != null">#{dataState},</if>
            <if test="remark != null">#{remark},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
        </trim>
    </insert>

    <update id="updateGsRole" parameterType="GsRole">
        update gs_role
        <trim prefix="SET" suffixOverrides=",">
            <if test="roleName != null and roleName != ''">role_name = #{roleName},</if>
            <if test="roleKey != null and roleKey != ''">role_key = #{roleKey},</if>
            <if test="roleSort != null">role_sort = #{roleSort},</if>
            <if test="dataScope != null">data_scope = #{dataScope},</if>
            <if test="roleState != null">role_state = #{roleState},</if>
            <if test="dataState != null">data_state = #{dataState},</if>
            <if test="remark != null">remark = #{remark},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where role_id = #{roleId}
    </update>

    <insert id="batchUserRole">
        insert into gs_user_permission(user_id, role_id) values
        <foreach item="item" index="index" collection="list" separator=",">
            (#{item.userId},#{item.roleId})
        </foreach>
    </insert>


    <insert id="batchRoleRegion">
        insert into gs_role_region(actor_id, region_id) values
        <foreach item="item" index="index" collection="list" separator=",">
            (#{item.actorId},#{item.regionId})
        </foreach>
    </insert>

    <delete id="deleteGsRoleById" parameterType="Long">
        delete
        from gs_role
        where role_id = #{roleId}
    </delete>

    <delete id="deleteGsRoleByIds" parameterType="String">
        delete from gs_role where role_id in
        <foreach item="roleId" collection="array" open="(" separator="," close=")">
            #{roleId}
        </foreach>
    </delete>

    <delete id="deleteUserRoleByUserId" parameterType="Long">
        delete from gs_user_permission where user_id=#{userId}
    </delete>

    <delete id="deleteRoleRegionByRoleId" parameterType="Long">
        delete from gs_role_region where actor_id=#{roleId}
    </delete>

</mapper>